{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
 "parameters": {
        "namePrefix": {
            "type": "string",
            "defaultValue": "gdtest-",
            "metadata": {
                "description": "String used as a base for naming resources."
            },
            "maxLength": 57
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of all resources"
            },
            "maxLength": 20
        },
        "instanceCount": { // scale set only
            "type": "int",
            "defaultValue": 1,
            "maxValue": 10,
            "metadata": {
                "description": "Number of VM instances to provision"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "12Characters",
            "metadata": {
                "description": "Admin password"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "VM size"
            }
        },
        "currentDateTime": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        }

    },
    "variables": {
        "adminUsername": "azureuser",
        "uniquePrefix": "[concat(parameters('namePrefix'), substring(parameters('currentDateTime'), 10, 6))]",
        "namingPrefix": "[concat(toLower(substring(variables('uniquePrefix'), 0, 12)), '-')]",
        "vnetAddressPrefix": "10.3.0.0/23",
        "virtualNetworkName": "[concat(variables('namingPrefix'), 'vnet')]",
        "subnet0Prefix": "10.3.0.0/24",
        "subnet0Name": "subnet-web",
        "subnetOthPrefix": "10.3.1.0/24",
        "subnetOthName": "subnet-oth",
        "vmName": "[concat(variables('namingPrefix'), 'v1')]",
        "webNetworkSecurityGroupName": "[concat(variables('namingPrefix'), 'subnetweb-nsg')]",
        "nicName": "[concat(variables('namingPrefix'), 'nic')]",
        "ipConfigName": "[concat(variables('namingPrefix'), 'ipconfig')]",
        "publicIPAddressName": "[concat(variables('namingPrefix'), 'pip')]",
        "image": {
            "publisher": "debian",
            "offer": "debian-10",
            "sku": "10",
            "version": "latest"
        },
        // scale set only
        "lbName": "[concat(variables('namingPrefix'), 'lb')]",
        "lbbepoolname": "[concat(variables('namingPrefix'), 'bepool')]",
        "lbrule1name": "[concat(variables('namingPrefix'), 'lbrule')]",
        "lbProbeName": "[concat(variables('namingPrefix'), 'lbprobe')]",
        // extension
        "singleQuote": "'",
        "doubleQuote": "\"",
        "apacheText": "[concat(variables('singleQuote'), '<html><head><meta http-equiv=',variables('doubleQuote'),'Cache-Control',variables('doubleQuote'),' content=',variables('doubleQuote'),'no-cache, no-store, must-revalidate',variables('doubleQuote'),'>
        <meta http-equiv=',variables('doubleQuote'),'Pragma',variables('doubleQuote'),' content=',variables('doubleQuote'),'no-cache',variables('doubleQuote'),'>
        <meta http-equiv=',variables('doubleQuote'),'Expires',variables('doubleQuote'),' content=',variables('doubleQuote'),'0',variables('doubleQuote'),'></head><body>',
        'This is resource ', variables('vmName'), 
        ' (OS host <?php echo exec(', variables('doubleQuote'), 'uname -n 2>&1', variables('doubleQuote'), '); ?>)',
        ' in location ', resourceGroup().location, ' created at ', parameters('currentDateTime'),
        ' <br><br><br>Metadata: <?php echo exec(', variables('doubleQuote'), 'curl http://169.254.169.254/metadata/instance?api-version=2021-01-01 -H Metadata:true 2>&1', variables('doubleQuote'), '); ?>',
        '.</body></html>', variables('singleQuote'))]",
        "commandToExecute": "[concat('sudo sleep 5 && sudo apt-get update && sudo apt-get install apache2 php libapache2-mod-php jq -y && sudo /etc/init.d/apache2 stop && sudo /etc/init.d/apache2 start && sudo rm -v /var/www/html/index.html && sudo echo ', variables('apacheText'),' > /var/www/html/index.php' )]"
    },

    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('webNetworkSecurityGroupName')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "custom-allow-ssh",
                        "properties": {
                            "priority": 1001,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "custom-allow-http",
                        "properties": {
                            "priority": 1100,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "80",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
    {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "apiVersion": "2019-06-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[variables('webNetworkSecurityGroupName')]"
        ],
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[variables('vnetAddressPrefix')]"
                ]
            },
            "subnets": [{
                    "name": "[variables('subnet0Name')]",
                    "properties": {
                        "addressPrefix": "[variables('subnet0Prefix')]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('webNetworkSecurityGroupName'))]"
                        }
                    }
                },
                {
                    "name": "[variables('subnetOthName')]",
                    "properties": {
                        "addressPrefix": "[variables('subnetOthPrefix')]"
                    }
                }
            ]
        }
    },
    {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "apiVersion": "2019-06-01",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "Standard"
        },
        "properties": {
            "publicIPAllocationMethod": "Static"
        }
    },
    {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
            "ipConfigurations": [{
                "name": "[variables('ipConfigName')]",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                    },
                    "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet0Name'))]"
                    }
                }
            }]
        }
    },
    {
        "name": "[variables('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2021-04-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"

        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
            },
            "storageProfile": {
                "osDisk": {
                    "createOption": "fromImage",
                    "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                    },
                    "diskSizeGB": 31
                },
                "imageReference": "[variables('image')]"
            },
            "networkProfile": {
                "networkInterfaces": [{
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                }]
            },
            "osProfile": {
                "computerName": "[variables('vmName')]",
                "adminUsername": "[variables('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true
                }
            }
        }
    },
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmName'), '/', 'extension')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "commandToExecute": "[variables('commandToExecute')]"
            }
        }
    }
]
}