{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "defaultValue": "gdtest-",
            "metadata": {
                "description": "String used as a base for naming resources."
            },
            "maxLength": 57
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of all resources"
            },
            "maxLength": 20
        },
        "instanceCount": { // scale set only
            "type": "int",
            "defaultValue": 3,
            "maxValue": 10,
            "metadata": {
                "description": "Number of VM instances to provision"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "12Characters",
            "metadata": {
                "description": "Admin password"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "VM size"
            }
        },
        "currentDateTime": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        }

    },
    "variables": {
        "adminUsername": "azureuser",
        "uniquePrefix": "[concat(parameters('namePrefix'), substring(parameters('currentDateTime'), 10, 6))]",
        "namingPrefix": "[concat(toLower(substring(variables('uniquePrefix'), 0, 12)), '-')]",
        "vnetAddressPrefix": "10.3.0.0/23",
        "virtualNetworkName": "[concat(variables('namingPrefix'), 'vnet')]",
        "subnet0Prefix": "10.3.0.0/24",
        "subnet0Name": "subnet-web",
        "subnetOthPrefix": "10.3.1.0/24",
        "subnetOthName": "subnet-oth",
        "vmName": "[concat(variables('namingPrefix'), 'v1')]",
        "webNetworkSecurityGroupName": "[concat(variables('namingPrefix'), 'subnetweb-nsg')]",
        "nicName": "[concat(variables('namingPrefix'), 'nic')]",
        "ipConfigName": "[concat(variables('namingPrefix'), 'ipconfig')]",
        "publicIPAddressName": "[concat(variables('namingPrefix'), 'pip')]",
        "image": {
            "publisher": "debian",
            "offer": "debian-10",
            "sku": "10",
            "version": "latest"
        },
        // scale set only
        "lbName": "[concat(variables('namingPrefix'), 'lb')]",
        "lbbepoolname": "[concat(variables('namingPrefix'), 'bepool')]",
        "lbrule1name": "[concat(variables('namingPrefix'), 'lbrule')]",
        "lbProbeName": "[concat(variables('namingPrefix'), 'lbprobe')]",
        // extension
        "singleQuote": "'",
        "doubleQuote": "\"",
        "apacheText": "[concat(variables('singleQuote'), '<html><head><meta http-equiv=',variables('doubleQuote'),'Cache-Control',variables('doubleQuote'),' content=',variables('doubleQuote'),'no-cache, no-store, must-revalidate',variables('doubleQuote'),'>
        <meta http-equiv=',variables('doubleQuote'),'Pragma',variables('doubleQuote'),' content=',variables('doubleQuote'),'no-cache',variables('doubleQuote'),'>
        <meta http-equiv=',variables('doubleQuote'),'Expires',variables('doubleQuote'),' content=',variables('doubleQuote'),'0',variables('doubleQuote'),'></head><body>',
        'This is resource ', variables('vmName'), 
        ' (OS host <?php echo exec(', variables('doubleQuote'), 'uname -n 2>&1', variables('doubleQuote'), '); ?>)',
        ' in location ', resourceGroup().location, ' created at ', parameters('currentDateTime'),
        ' <br><br><br>Metadata: <?php echo exec(', variables('doubleQuote'), 'curl http://169.254.169.254/metadata/instance?api-version=2021-01-01 -H Metadata:true 2>&1', variables('doubleQuote'), '); ?>',
        '.</body></html>', variables('singleQuote'))]",
        "commandToExecute": "[concat('sudo sleep 5 && sudo apt-get update && sudo apt-get install apache2 php libapache2-mod-php jq -y && sudo /etc/init.d/apache2 stop && sudo /etc/init.d/apache2 start && sudo rm -v /var/www/html/index.html && sudo echo ', variables('apacheText'),' > /var/www/html/index.php' )]"
    },

    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('webNetworkSecurityGroupName')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "custom-allow-ssh",
                        "properties": {
                            "priority": 1001,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "custom-allow-http",
                        "properties": {
                            "priority": 1100,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "80",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('webNetworkSecurityGroupName')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet0Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('webNetworkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnetOthName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetOthPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2018-07-01",
            "name": "[variables('lbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontend",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbbepoolname')]"
                    }
                ],
                "loadbalancingRules": [
                    {
                        "name": "[concat(variables('lbrule1name'), '-80')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/frontendIPConfigurations/loadBalancerFrontend')]" //"[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
                            },
                            "backendaddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/backendAddressPools/', variables('lbbepoolname'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/probes/', variables('lbProbeName'))]"
                            },
                            "disableOutboundSnat": true
                        }
                    },
                    {
                        "name": "[concat(variables('lbrule1name'), '-22')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/frontendIPConfigurations/loadBalancerFrontend')]" //"[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
                            },
                            "backendaddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/backendAddressPools/', variables('lbbepoolname'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 22,
                            "backendPort": 22,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/probes/', variables('lbProbeName'))]"
                            },
                            "disableOutboundSnat": true
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [
                    {
                        "name": "[concat(variables('lbrule1name'), '-outbound')]",
                        "properties": {
                            "allocatedOutboundPorts": 6392,
                            "protocol": "All",
                            "enableTcpReset": true,
                            "idleTimeoutInMinutes": 4,
                            "frontendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/frontendIPConfigurations/loadBalancerFrontend')]" //"[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
                                }
                            ],
                            "backendaddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/backendAddressPools/', variables('lbbepoolname'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('lbprobename')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('vmName')]",
            "apiVersion": "2021-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbname'))]" //added
            ],
            "zones": [
                "1",
                "2",
                "3"
            ],
            "sku": {
                "name": "[parameters('vmSize')]",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
            },
            "properties": {
                "overprovision": "true",
                "singlePlacementGroup": "true",
                "doNotRunExtensionsOnOverprovisionedVMs": false,
                "zoneBalance": false,
                "platformFaultDomainCount": 5,
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "scaleInPolicy": {
                    "rules": [
                        "Default"
                    ]
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "caching": "ReadWrite",
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "diskSizeGB": 31
                        },
                        "dataDisks": [],
                        "imageReference": "[variables('image')]"
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('vmName')]",
                        "adminUsername": "[variables('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('nicName')]",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('ipConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnet0Name'))]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbname')), '/backendAddressPools/', variables('lbbepoolname'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat(variables('vmName'), '-', 'extension')]",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "commandToExecute": "[variables('commandToExecute')]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}